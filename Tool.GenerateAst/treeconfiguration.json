{
  "namespace": "LoxSharp.Core",
  "placeholders": {
    "expression": "IExpr",
    "statement": "IStmt",
    "token": "ILoxToken",
    "literal": "LiteralValue"
  },
  "domains": {
    "Expr": {
      "interface": "expression",
      "visitor": "IExprVisitor",
      "parameterIdentifier": "expr",
      "definitions": [
        "Assign:token name, expression value",
        "Binary:expression left, token op, expression right",
        "Call:expression callee, token parent, expression[]? arguments",
        "Get:expression obj, token name",
        "Grouping:expression expression",
        "Literal:literal value",
        "Logical:expression left, token op, expression right",
        "Set:expression obj, token name, expression value",
        "This:token keyword",
        "Unary:token op, expression right",
        "Variable:token name"
      ]
    },
    "Stmt": {
      "interface": "statement",
      "visitor": "IStmtVisitor",
      "parameterIdentifier": "stmt",
      "definitions": [
        "Block:statement[] statements",
        "Class:token name, Function[] methods",
        "Expression:expression expression",
        "Function:token name, token[] parameters, statement[] body",
        "If:expression condition, statement thenBranch, statement? elseBranch",
        "Print:expression expression",
        "Return:token keyword, expression? value",
        "Var:token name, expression initializer",
        "While:expression condition, statement body"
      ]
    }
  }
}
